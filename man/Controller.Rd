% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Controller.R
\docType{class}
\name{Controller}
\alias{Controller}
\title{Class of Controller}
\description{
Create a class of controller to run a trial.
}
\examples{
##
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Controller-new}{\code{Controller$new()}}
\item \href{#method-Controller-get_listener}{\code{Controller$get_listener()}}
\item \href{#method-Controller-get_trial}{\code{Controller$get_trial()}}
\item \href{#method-Controller-mute}{\code{Controller$mute()}}
\item \href{#method-Controller-reset}{\code{Controller$reset()}}
\item \href{#method-Controller-get_output}{\code{Controller$get_output()}}
\item \href{#method-Controller-run}{\code{Controller$run()}}
\item \href{#method-Controller-clone}{\code{Controller$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-new"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-new}{}}}
\subsection{Method \code{new()}}{
initialize a controller of the trial
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$new(trial, listener)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{trial}}{a \code{Trial} object.}

\item{\code{listener}}{a \code{Listener} object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-get_listener"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-get_listener}{}}}
\subsection{Method \code{get_listener()}}{
return listener
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$get_listener()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-get_trial"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-get_trial}{}}}
\subsection{Method \code{get_trial()}}{
return trial
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$get_trial()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-mute"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-mute}{}}}
\subsection{Method \code{mute()}}{
mute all messages (not including warnings)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$mute()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{silent}}{logical.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-reset"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-reset}{}}}
\subsection{Method \code{reset()}}{
reset the trial and listener registered to the controller before running
additional replicate of simulation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$reset()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-get_output"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-get_output}{}}}
\subsection{Method \code{get_output()}}{
return a data frame of all current outputs saved by calling \code{save}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$get_output(cols = NULL, simplify = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cols}}{columns to be returned from \code{Controller$output}. If
\code{NULL}, all columns are returned.}

\item{\code{simplify}}{logical. Return value rather than a data frame of one
column when \code{length(col) == 1} and \code{simplify == TRUE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-run"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-run}{}}}
\subsection{Method \code{run()}}{
run a trial
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$run(n = 1, plot_event = TRUE, silent = FALSE, dry_run = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{number of replicates of simulation. \code{n = 1} by default.
Simulation results can be accessed by \code{Controller$get_output()}.}

\item{\code{plot_event}}{create event plot}

\item{\code{silent}}{logical. \code{TRUE} if muting all messages during a
trial. Note that warning messages are still displayed.}

\item{\code{dry_run}}{\code{TRUE} if action function provided by users is
ignored and a built-in default action \code{default_action} is called
instead. This default function only locks data when the event is
triggered. Event time and number of endpoints' events or sample sizes
are saved. It is suggested to set \code{dry_run = TRUE} to estimate
distributions of triggering time and number of events before formally
using custom action functions if a fixed design is in use.
This helps determining planned maximum
information for group sequential design and reasonable time of event
of interest when planning a trial. Set it to \code{FALSE} for formal
simulations. However, for an adaptive design where arm(s) could
possibly be added or removed, setting \code{dry_run} to \code{TRUE}
is usually not helpful because adaption should be actually applied
to estimate event time.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Controller-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Controller-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Controller$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
