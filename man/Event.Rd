% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Event.R
\docType{class}
\name{Event}
\alias{Event}
\title{Class of Event}
\description{
Create a class of event. An event means the time point to take an action,
e.g., carry out (futility, interim, final) analysis for add/remove arms,
or stop a trial early.
}
\examples{
##
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Event-new}{\code{Event$new()}}
\item \href{#method-Event-get_name}{\code{Event$get_name()}}
\item \href{#method-Event-get_type}{\code{Event$get_type()}}
\item \href{#method-Event-get_trigger_condition}{\code{Event$get_trigger_condition()}}
\item \href{#method-Event-get_action}{\code{Event$get_action()}}
\item \href{#method-Event-set_dry_run}{\code{Event$set_dry_run()}}
\item \href{#method-Event-execute_action}{\code{Event$execute_action()}}
\item \href{#method-Event-get_trigger_status}{\code{Event$get_trigger_status()}}
\item \href{#method-Event-trigger_event}{\code{Event$trigger_event()}}
\item \href{#method-Event-mute}{\code{Event$mute()}}
\item \href{#method-Event-clone}{\code{Event$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-new"></a>}}
\if{latex}{\out{\hypertarget{method-Event-new}{}}}
\subsection{Method \code{new()}}{
initialize Event
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$new(name, type, trigger_condition, action = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{character. Name of event.}

\item{\code{type}}{character vector. Event type(s) (futility, interim, final),
an event can be of multiple types.}

\item{\code{trigger_condition}}{function to check if this event should
trigger. Return TRUE/FALSE.}

\item{\code{action}}{function to execute when the event triggers.}

\item{\code{...}}{arguments for \code{trigger_condition}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-Event-get_name}{}}}
\subsection{Method \code{get_name()}}{
return name of event
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-get_type"></a>}}
\if{latex}{\out{\hypertarget{method-Event-get_type}{}}}
\subsection{Method \code{get_type()}}{
return type(s) of event
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_type()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-get_trigger_condition"></a>}}
\if{latex}{\out{\hypertarget{method-Event-get_trigger_condition}{}}}
\subsection{Method \code{get_trigger_condition()}}{
return trigger_condition function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_trigger_condition()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-get_action"></a>}}
\if{latex}{\out{\hypertarget{method-Event-get_action}{}}}
\subsection{Method \code{get_action()}}{
return action function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_action()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-set_dry_run"></a>}}
\if{latex}{\out{\hypertarget{method-Event-set_dry_run}{}}}
\subsection{Method \code{set_dry_run()}}{
set if dry run should be carried out for the event. For more details,
refer to \code{Controller::run}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$set_dry_run(dry_run)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dry_run}}{logical.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-execute_action"></a>}}
\if{latex}{\out{\hypertarget{method-Event-execute_action}{}}}
\subsection{Method \code{execute_action()}}{
execute action function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$execute_action(trial)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{trial}}{a \code{Trial} object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-get_trigger_status"></a>}}
\if{latex}{\out{\hypertarget{method-Event-get_trigger_status}{}}}
\subsection{Method \code{get_trigger_status()}}{
return trigger status
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_trigger_status()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-trigger_event"></a>}}
\if{latex}{\out{\hypertarget{method-Event-trigger_event}{}}}
\subsection{Method \code{trigger_event()}}{
trigger an event (always TRUE) and execute action accordingly. It calls
Trial$get_data_lock_time() to lock data based on conditions implemented
in Event$trigger_condition. If time that meets the condition cannot be
found, Trial$get_data_lock_time() will throw an error and stop the
program. This means that user needs to adjust their trigger_condition
(e.g., target number of events (target_n_events) is impossible to
reach).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$trigger_event(trial, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{trial}}{a \code{Trial} object.}

\item{\code{...}}{other arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-mute"></a>}}
\if{latex}{\out{\hypertarget{method-Event-mute}{}}}
\subsection{Method \code{mute()}}{
mute all messages (not including warnings)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$mute(silent)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{silent}}{logical.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Event-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
